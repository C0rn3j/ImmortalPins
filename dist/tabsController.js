(()=>{"use strict";angular.module("tabsApp").controller("TabsController",["$scope",function(e){if(e.sortableOptions={stop:function(){for(let t=0;t<e.savedTabs.length;t++)e.savedTabs[t].index=t;chrome.storage.sync.set({savedTabs:e.savedTabs},(()=>{console.log("Tabs order updated")}))}},e.savedTabs=[],e.init=async function(){e.savedTabs=await t(),e.$apply()},e.checkInputBox=async function(t,n){n.value.startsWith("https://")||n.value.startsWith("http://")?(t.style.display="block",t.textContent=protocolInURLMessage):(t.textContent="",t.style.display="none"),e.savedTabs.some((function(e){return e.url===n.value}))&&(t.style.display="block",t.textContent=duplicateTab)},"popup.html"!==location.pathname.split("/").slice(-1)[0]){const t=document.getElementById("tabUrl"),n=document.getElementById("warningBox");if(!t)return void alert("Could not find element with ID tabUrl!");if(!n)return void alert("Could not find element with ID warningBox!");t.addEventListener("input",(function(){e.checkInputBox()}))}async function t(){return new Promise((e=>{chrome.storage.sync.get("savedTabs",(({savedTabs:t})=>{t||(t=[],chrome.storage.sync.set({savedTabs:t}));let n=!1;for(let e in t){const o=t[e];"Exact match"==o.rule&&(o.rule="Exact",n=!0),n&&(chrome.storage.sync.set({savedTabs:t}),console.log("Migrated settings to new version"))}e(t)}))}))}e.saveTab=async function(){const t=document.getElementById("tabUrl");if(!t)return void alert("Could not find element with ID tabUrl");const n=t.value,o=document.getElementById("dropbtn-protocol-button");if(!o)return void alert("Could not find element with ID dropbtn-protocol-button");let a=o.textContent,s="",l=null;const r=document.querySelector('input[name="choice"]:checked');if(r&&(s=r.parentNode.querySelector("label").textContent),"Regex"===s&&(l=document.getElementById("regex-input").value),n.startsWith("https://")||n.startsWith("http://"))alert(protocolInURLMessage);else if(e.savedTabs.some((function(e){return e.url===n})))alert("Tab already exists!"+n);else if(n){if(""==a||""==s)return void alert("ERROR, empty protocol ("+a+") or rule type("+s+")");let o=e.savedTabs.length,r={url:n,index:o,rule:s,protocol:a,state:"Enabled",regex:l||null};e.savedTabs.push(r),e.savedTabs.sort(((e,t)=>e.index-t.index)),chrome.storage.sync.set({savedTabs:e.savedTabs},(()=>{console.log("Tab URL saved:",n),t.value=""}))}},e.editTab=async function(t){const o=document.getElementById("tabUrl"),a=document.getElementById("regex-input"),s=document.getElementById("dropbtn-protocol-button");document.querySelectorAll("label").forEach((e=>{e.textContent===t.rule&&(e.previousElementSibling.checked=!0)})),"Regex"===t.rule?(a.value=t.regex,document.getElementById("regex-container").style.visibility="visible"):document.getElementById("regex-container").style.visibility="hidden";const l=n.find((e=>e.option===t.rule));document.getElementById("rule-type-desc").innerHTML=l.desc,o.value=t.url,s.textContent=t.protocol,await e.checkInputBox()},e.removeTab=async function(t){let n=e.savedTabs.indexOf(t);if(n>-1){e.savedTabs.splice(n,1);for(let t=n;t<e.savedTabs.length;t++)e.savedTabs[t].index-=1;chrome.storage.sync.set({savedTabs:e.savedTabs},(()=>{console.log("Tab URL removed:",t.url)}))}await e.checkInputBox()},e.removeAllTabs=async function(){for(;e.savedTabs.length>0;){let t=e.savedTabs[0];e.removeTab(t),console.log("Removed tab:",t.url)}},e.getOpenTabByURL=async function(e,t,n,o){for(let a in t){let s=t[a];if("Exact"===n){if(s.url==e||s.pendingUrl&&s.pendingUrl==e)return s}else if("Loose"===n){if(s.url.startsWith(e)||s.pendingUrl&&s.pendingUrl.startsWith(e))return s}else{if("Regex"!==n)return alert("Unimplemented rule "+n),!1;if(new RegExp(o).test(s.url))return s}}return!1};const n=[{option:"Loose",desc:'Matches any URL that begins with the same path, for example:<br>"reddit.com" will match both "reddit.com" and "reddit.com/r/cars"'},{option:"Regex",desc:"Matches the target URL based on a regular expression, for example to open a specific Slack channel, but not open a new tab if you switch to a different channel"},{option:"Exact",desc:'Exactly matches the target URL, for example:<br>"reddit.com" will match "reddit.com" but not "reddit.com/home"'}],o=[{option:"https://"},{option:"http://"},{option:"file://"}];if("popup.html"!=location.pathname.split("/").slice(-1)){let e="Loose";const t=n.find((t=>t.option===e));document.getElementById("rule-type-desc").innerHTML=t.desc;const a=document.getElementById("rule-rectangle-box");n.forEach((e=>{const t=document.createElement("div");t.classList.add("rule-rectangle-box-component");const n=document.createElement("input");n.type="radio",n.name="choice",n.value=e.option;const o=document.createElement("label");o.textContent=e.option,o.classList.add("rule-option-text"),t.appendChild(n),t.appendChild(o),t.addEventListener("change",(()=>{n.checked&&(document.getElementById("rule-type-desc").innerHTML=e.desc,"Regex"===e.option?document.getElementById("regex-container").style.visibility="visible":document.getElementById("regex-container").style.visibility="hidden")})),a.appendChild(t)})),document.querySelectorAll("label").forEach((t=>{t.textContent===e&&(t.previousElementSibling.checked=!0)}));const s=document.getElementById("protocol-options");o.forEach((e=>{const t=document.createElement("a");t.href="#",t.textContent=e.option,t.addEventListener("click",(()=>{document.getElementById("dropbtn-protocol-button").innerHTML=e.option,s.style.display="none"})),s.appendChild(t)})),document.getElementById("dropbtn-protocol-button").addEventListener("mouseover",(function(){s.style.display=""}))}e.toggleEnableState=async function(n){let o=await t();"Enabled"==n.state?o[n.index].state="Disabled":o[n.index].state="Enabled",chrome.storage.sync.set({savedTabs:o},(()=>{console.log("Tab state updated")})),e.savedTabs=o,e.$apply()},e.syncTabs=async function(){let n=await async function(){return await chrome.tabs.query({pinned:!0})}(),o=await t(),a=0;for(let t in o){const s=o[t];if("Disabled"==s.state){a+=1;continue}let l=await e.getOpenTabByURL(s.protocol+s.url,n,s.rule,s.regex);l?s.index-a!=l.index&&chrome.tabs.move(l.id,{index:s.index-a}):(console.log("Opening: "+s.protocol+s.url),chrome.tabs.create({url:s.protocol+s.url,pinned:!0,active:!1,index:s.index}))}},e.goToSettings=async function(){let t="";if("undefined"==typeof browser)t=`chrome-extension://${chrome.runtime.id}/options.html`;else{const e=await browser.runtime.getBrowserInfo();"Firefox"===e.name?t=browser.runtime.getManifest().options_ui.page:alert("Unsupported browser: "+e.name)}let n=await chrome.tabs.query({});const o=await e.getOpenTabByURL(t,n,"Loose");o?(o.selected||chrome.tabs.update(o.id,{selected:!0}),window.close()):chrome.tabs.create({url:t})},e.exportSettings=async function(){chrome.storage.sync.get(null,(function(e){const t=JSON.stringify(e),n=new Blob([t],{type:"application/json"}),o=(URL.createObjectURL(n),(new Date).toISOString().replace(/T/,"_").replace(/:/g,"-").slice(0,-5));saveAs(n,"immortal-pins_"+o+".json")}))},e.importSettings=async function(){const n=document.createElement("input");n.type="file",n.accept="application/json",n.onchange=function(){const o=n.files[0],a=new FileReader;a.readAsText(o),a.onload=function(){const n=JSON.parse(a.result);chrome.storage.sync.set(n,(function(){console.log("Imported data:",n),t().then((function(t){e.savedTabs=t,e.$apply()}))}))}},n.click()},e.donatePatreon=async function(){chrome.tabs.create({url:"https://www.patreon.com/C0rn3j"})},e.donatePaypal=async function(){chrome.tabs.create({url:"https://paypal.me/MartinRys"})},e.init()}])})();