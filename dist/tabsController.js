(()=>{"use strict";angular.module("tabsApp").controller("TabsController",["$scope",function(e){e.sortableOptions={stop:function(){for(let t=0;t<e.savedTabs.length;t++)e.savedTabs[t].index=t;chrome.storage.sync.set({savedTabs:e.savedTabs},(()=>{console.log("Tabs order updated")}))}},e.savedTabs=[],e.init=async function(){e.savedTabs=await o(),e.$apply()},e.checkInputBox=async function(o,a){a.value.startsWith("https://")||a.value.startsWith("http://")?(o.style.display="block",o.textContent=t):(o.textContent="",o.style.display="none"),e.savedTabs.some((function(e){return e.url===a.value}))&&(o.style.display="block",o.textContent=n)};const t="Please enter URL without the protocol - i.e. example.com, not https://example.com.",n="Tab already exists!";if("popup.html"!==location.pathname.split("/").slice(-1)[0]){const t=document.getElementById("tabUrl"),n=document.getElementById("warningBox");if(!t)return void alert("Could not find element with ID tabUrl!");if(!n)return void alert("Could not find element with ID warningBox!");t.addEventListener("input",(function(){e.checkInputBox()}))}async function o(){return new Promise((e=>{chrome.storage.sync.get("savedTabs",(({savedTabs:t})=>{t||(t=[],chrome.storage.sync.set({savedTabs:t}));let n=!1;for(let e in t){const o=t[e];"Exact match"==o.rule&&(o.rule="Exact",n=!0),n&&(chrome.storage.sync.set({savedTabs:t}),console.log("Migrated settings to new version"))}e(t)}))}))}e.saveTab=async function(){const n=document.getElementById("tabUrl");if(!n)return void alert("Could not find element with ID tabUrl");const o=n.value,a=document.getElementById("dropbtn-protocol-button");if(!a)return void alert("Could not find element with ID dropbtn-protocol-button");let i=a.textContent,l="";const r=document.querySelector('input[name="choice"]:checked');if(r){if(!r.parentNode)return void alert("Something is deeply broken, no parent for radio button");const e=r.parentNode.querySelector("label");if(!e)return void alert("Could not find label element");if(null===e.textContent)return void alert("Label text is null");l=e.textContent}let s="null";if("Regex"===l){const e=document.getElementById("regex-input");if(!e)return void alert("Could not find label element with ID regex-input");s=e.value}if(o.startsWith("https://")||o.startsWith("http://"))alert(t);else if(e.savedTabs.some((function(e){return e.url===o})))alert("Tab already exists!"+o);else if(o){if(""==i||""==l)return void alert("ERROR, empty protocol ("+i+") or rule type("+l+")");let t=e.savedTabs.length,a={url:o,index:t,rule:l,protocol:i,state:"Enabled",regex:s||null};e.savedTabs.push(a),e.savedTabs.sort(((e,t)=>e.index-t.index)),chrome.storage.sync.set({savedTabs:e.savedTabs},(()=>{console.log("Tab URL saved:",o),n.value=""}))}},e.editTab=async function(t){const n=document.getElementById("tabUrl"),o=document.getElementById("dropbtn-protocol-button");if(!o)return void alert("Could not find element with ID dropbtn-protocol-button");document.querySelectorAll("label").forEach((e=>{e.textContent===t.rule&&(e.previousElementSibling.checked=!0)}));const i=document.getElementById("regex-container");if(!i)return void alert("Could not find element with ID regex-container");const l=document.getElementById("regex-input");if(!l)return void alert("Could not find element with ID regex-input");"Regex"===t.rule&&null!==t.regex?(l.value=t.regex,i.style.visibility="visible"):i.style.visibility="hidden";const r=a.find((e=>e.option===t.rule));if(!r)return void alert("Could not find a match for rule: "+t.rule);const s=document.getElementById("rule-type-desc");s?(s.innerHTML=r.desc,n.value=t.url,o.textContent=t.protocol,await e.checkInputBox()):alert("Could not find element with ID rule-type-desc")},e.removeTab=async function(t){let n=e.savedTabs.indexOf(t);if(n>-1){e.savedTabs.splice(n,1);for(let t=n;t<e.savedTabs.length;t++)e.savedTabs[t].index-=1;chrome.storage.sync.set({savedTabs:e.savedTabs},(()=>{console.log("Tab URL removed:",t.url)}))}await e.checkInputBox()},e.removeAllTabs=async function(){for(;e.savedTabs.length>0;){let t=e.savedTabs[0];e.removeTab(t),console.log("Removed tab:",t.url)}},e.getOpenTabByURL=async function(e,t,n,o){for(let a in t){let i=t[a];if("Exact"===n){if(i.url==e||i.pendingUrl&&i.pendingUrl==e)return i}else if("Loose"===n){if(i.url.startsWith(e)||i.pendingUrl&&i.pendingUrl.startsWith(e))return i}else{if("Regex"!==n)return alert("Unimplemented rule "+n),!1;if(new RegExp(o).test(i.url))return i}}return!1};const a=[{option:"Loose",desc:'Matches any URL that begins with the same path, for example:<br>"reddit.com" will match both "reddit.com" and "reddit.com/r/cars"'},{option:"Regex",desc:"Matches the target URL based on a regular expression, for example to open a specific Slack channel, but not open a new tab if you switch to a different channel"},{option:"Exact",desc:'Exactly matches the target URL, for example:<br>"reddit.com" will match "reddit.com" but not "reddit.com/home"'}],i=[{option:"https://"},{option:"http://"},{option:"file://"}];if("popup.html"!=location.pathname.split("/").slice(-1)[0]){let e="Loose";const t=a.find((t=>t.option===e)),n=document.getElementById("rule-type-desc");if(!n)return void alert("Could not find element with ID rule-type-desc");if(!t)return void alert("Could not find a rule match for option: "+e);n.innerHTML=t.desc;const o=document.getElementById("rule-rectangle-box");if(!o)return void alert("Could not find element with ID rule-rectangle-box");a.forEach((e=>{const t=document.createElement("div");t.classList.add("rule-rectangle-box-component");const a=document.createElement("input");a.type="radio",a.name="choice",a.value=e.option;const i=document.createElement("label");i.textContent=e.option,i.classList.add("rule-option-text"),t.appendChild(a),t.appendChild(i),t.addEventListener("change",(()=>{if(a.checked){n.innerHTML=e.desc;const t=document.getElementById("regex-container");if(!t)return void alert("Could not find element with ID regex-container");"Regex"===e.option?t.style.visibility="visible":t.style.visibility="hidden"}})),o.appendChild(t)})),document.querySelectorAll("label").forEach((t=>{t.textContent===e&&(t.previousElementSibling.checked=!0)}));const l=document.getElementById("protocol-options");if(!l)return void alert("Could not find element with ID protocol-options");const r=document.getElementById("dropbtn-protocol-button");if(!r)return void alert("Could not find element with ID dropbtn-protocol-button");i.forEach((e=>{const t=document.createElement("a");t.href="#",t.textContent=e.option,t.addEventListener("click",(()=>{r.innerHTML=e.option,l.style.display="none"})),l.appendChild(t)})),r.addEventListener("mouseover",(function(){l.style.display=""}))}e.toggleEnableState=async function(t){let n=await o();"Enabled"==t.state?n[t.index].state="Disabled":n[t.index].state="Enabled",chrome.storage.sync.set({savedTabs:n},(()=>{console.log("Tab state updated")})),e.savedTabs=n,e.$apply()},e.syncTabs=async function(){let t=await async function(){return await chrome.tabs.query({pinned:!0})}(),n=await o(),a=0;for(let o in n){const i=n[o];if("Disabled"==i.state){a+=1;continue}let l=await e.getOpenTabByURL(i.protocol+i.url,t,i.rule,i.regex);l?i.index-a!=l.index&&chrome.tabs.move(l.id,{index:i.index-a}):(console.log("Opening: "+i.protocol+i.url),chrome.tabs.create({url:i.protocol+i.url,pinned:!0,active:!1,index:i.index}))}},e.goToSettings=async function(){let t="";if("undefined"==typeof browser)t=`chrome-extension://${chrome.runtime.id}/options.html`;else{const e=await browser.runtime.getBrowserInfo();if("Firefox"===e.name){const e=browser.runtime.getManifest();if(!e.options_ui)return void alert("manifest.options_ui is undefined!");t=e.options_ui.page}else alert("Unsupported browser: "+e.name)}let n=await chrome.tabs.query({});const o=await e.getOpenTabByURL(t,n,"Loose");o?(o.selected||chrome.tabs.update(o.id,{selected:!0}),window.close()):chrome.tabs.create({url:t})},e.exportSettings=async function(){chrome.storage.sync.get(null,(function(e){const t=JSON.stringify(e),n=new Blob([t],{type:"application/json"}),o=(URL.createObjectURL(n),(new Date).toISOString().replace(/T/,"_").replace(/:/g,"-").slice(0,-5));saveAs(n,"immortal-pins_"+o+".json")}))},e.importSettings=async function(){const t=document.createElement("input");t.type="file",t.accept="application/json",t.onchange=function(){const n=t.files?t.files[0]:null;if(!n)return void alert("Error loading settings file");const a=new FileReader;a.readAsText(n),a.onload=function(){const t=JSON.parse(a.result);chrome.storage.sync.set(t,(function(){console.log("Imported data:",t),o().then((function(t){e.savedTabs=t,e.$apply()}))}))}},t.click()},e.donatePatreon=async function(){chrome.tabs.create({url:"https://www.patreon.com/C0rn3j"})},e.donatePaypal=async function(){chrome.tabs.create({url:"https://paypal.me/MartinRys"})},e.init()}])})();